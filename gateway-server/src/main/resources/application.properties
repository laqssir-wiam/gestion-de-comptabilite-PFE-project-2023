server.port=9009
spring.application.name=gateway-server


#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak:8080/realms/compta-realm
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

#gateway est impossible de fonctionner avec Oauth2 et jwt a cause de javax et jacarta (@EnableWebSecurity et httpSecurity)
#je peux seciriser gateway
#si je veux ajouter la securiter au nivau de gateway je trouve le problem avec la dependance gateway et security pour ca je la mis dans les microservices
#moi j'ai besoin de hhtpSecurty.. afin de traiter le jwt.. et l'authorisation de angular (apollo)

spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.consul.config.enabled=false
spring.cloud.consul.host=consul-server
spring.cloud.consul.port=8500
#spring.cloud.consul.discovery.healthCheckPath=my-gateway:9009/health
#spring.cloud.consul.discovery.healthCheckInterval=15s`
#spring.cloud.consul.host=localhost

spring.cloud.gateway.routes[0].id=office-service
spring.cloud.gateway.routes[0].uri=lb://office-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/office/**
#spring.cloud.gateway.routes[0].predicates[0]=Path=/office/graphql**
spring.cloud.gateway.routes[1].id=plan-comptable-service
spring.cloud.gateway.routes[1].uri=lb://plan-comptable-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/plan/**
spring.cloud.gateway.routes[2].id=banque-service
spring.cloud.gateway.routes[2].uri=lb://banque-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/banque/**
spring.cloud.gateway.routes[3].id=exercice-service
spring.cloud.gateway.routes[3].uri=lb://exercice-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/exercice/**
spring.cloud.gateway.routes[4].id=client-fourniseur-service
spring.cloud.gateway.routes[4].uri=lb://client-fourniseur-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/comptetiers/**
spring.cloud.gateway.routes[5].id=security-service
spring.cloud.gateway.routes[5].uri=lb://security-service
spring.cloud.gateway.routes[5].predicates[0]=Path=/security/**
spring.cloud.gateway.routes[6].id=chating-service
spring.cloud.gateway.routes[6].uri=lb://chating-service
spring.cloud.gateway.routes[6].predicates[0]=Path=/chat/**

spring.graphql.cors.allowed-origins=http://localhost:4200
spring.graphql.cors.allowed-origin-patterns=*
spring.graphql.cors.allowed-methods=GET,POST,PUT,DELETE
spring.graphql.cors.allowed-headers=*
spring.graphql.cors.exposed-headers=*
spring.graphql.cors.allow-credentials=true
spring.graphql.cors.max-age=1800s